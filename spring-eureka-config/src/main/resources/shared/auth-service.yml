server:
  port: 9100
  
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/spring_social?useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: Sanjay@1

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              client-name: Turtles Technologies linkedin login
              clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
              clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 121189305185277
              clientSecret: 42ffe5aa7379e8326387e0fe16f34132
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: d3e47fc2ddd966fa4352
              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
            twitter:
              clientId: oXJIDGVdB0PDnMICDwKckyzKm
              clientSecret: Z4BpN51kNsb2wbEfzDXm40v38W3I2P1u4H6fvfM6HQraVfry5j
              client-name: Turtles Technologies Twitter login
              authorization-grant-type: authorization_code
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              clientAuthenticationScheme: form
            linkedIn:
              clientId: 771mrzk94hye1w
              clientSecret: iIJFgBf9lCb18zYe
              client-name: Turtles Technologies linkedin login
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope: r_liteprofile r_emailaddress
              authorization-grant-type: authorization_code
              client-authentication-method: POST
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
            linkedIn:
              authorizationUri: https://www.linkedin.com/oauth/v2/authorization
              tokenUri: https://www.linkedin.com/oauth/v2/accessToken
              userInfoUri: https://api.linkedin.com/v1/people/~?format=json
            twitter:
              tokenUri: https://api.twitter.com/oauth/access_token
              requestTokenUri: https://api.twitter.com/oauth/request_token
              authorizationUri: https://api.twitter.com/oauth/authorize
              authenticateUri: https://api.twitter.com/oauth/authenticate
              userInfoUri:  https://api.twitter.com/1.1/users/show.json
#resource:
  #    userInfoUri: https://api.linkedin.com/v1/people/~?format=json
#resource:
  #    userInfoUri:  https://api.twitter.com/1.1/users/show.json
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect